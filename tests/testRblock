###
### $Id: testRblock 834 2014-06-27 16:22:16Z proebuck $
###

## NOTE: We cannot give this file a name ending in '.R', since that
## would force 'R CMD check' to try to run it as a standalone test.
## Instead, we want to be able to reuse the code in a number of
## different test runs, loading it with 'source'.


###############################################################################
## assumes you have already defined the following variables before using
## 'source' to run this code block:
##    proteins (a data frame containing at least one column named 'Antibody'
##    various RPPA objects, one for each antibody in the 'proteins' object
##    design (an RPPADesign object)
##    model (the statistical model to fit)
##    method (the method used for the first pass of the fit)
##    measure (the quantification measure to fit)
###############################################################################

ver <- packageDescription("SuperCurve", fields="Version")
cat(paste("\nTest of SuperCurve version", ver), "\n")
cat(paste("model = ", model, "; method = ", method,
            "; measure = ", measure, sep=""), "\n")
for (i in seq_len(nrow(proteins))) {
    itemName <- proteins$Antibody[i]
    item <- eval(as.name(itemName))
    temp <- try(RPPAFit(item,
                        design,
                        measure,
                        method=method,
                        model=model,
                        ignoreNegative=FALSE,
                        warnLevel=-1),
                TRUE)
    if (is(temp, "try-error")) {
        print(paste(itemName, measure, ver, "FAILED"))
        next
    }
    meansq <- mean(resid(temp)^2, na.rm=TRUE)
    tmeansq <- mean(resid(temp)^2, na.rm=TRUE, trim=0.1)
    par(bg="white")
    plot(temp,
         xlim=c(-15, 15),
         main=paste(itemName, measure, ver),
         sub=paste('Mean square residuals =', round(meansq)))
    if (FALSE) {
        dev.copy(png,
                 file.path(paste(itemName, measure, ver, "png", sep=".")),
                 width=640,
                 height=640)
        dev.off()
    }
    print(paste(itemName, measure, round(meansq), round(tmeansq)))
}

remove(i, itemName, item, meansq, tmeansq)

